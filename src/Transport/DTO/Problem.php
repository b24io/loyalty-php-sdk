<?php
declare(strict_types=1);

namespace B24io\Loyalty\SDK\Transport\DTO;

/**
 * Class Problem
 *
 * @see https://tools.ietf.org/html/rfc7807
 *
 * @package B24io\Loyalty\SDK\Transport\DTO
 */
class Problem
{
    /**
     * @var string An absolute URI that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).
     */
    private $type;
    /**
     * @var string  A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable
     */
    private $title;
    /**
     * @var int  The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
     */
    private $status;
    /**
     * @var string A human readable explanation specific to this occurrence of the problem.
     */
    private $detail;
    /**
     * @var string An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     */
    private $instance;

    /**
     * @return string
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * @param string $type
     *
     * @return Problem
     */
    public function setType(string $type): Problem
    {
        $this->type = $type;

        return $this;
    }

    /**
     * @return string
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * @param string $title
     *
     * @return Problem
     */
    public function setTitle(string $title): Problem
    {
        $this->title = $title;

        return $this;
    }

    /**
     * @return int
     */
    public function getStatus(): int
    {
        return $this->status;
    }

    /**
     * @param int $status
     *
     * @return Problem
     */
    public function setStatus(int $status): Problem
    {
        $this->status = $status;

        return $this;
    }

    /**
     * @return string
     */
    public function getDetail(): string
    {
        return $this->detail;
    }

    /**
     * @param string $detail
     *
     * @return Problem
     */
    public function setDetail(string $detail): Problem
    {
        $this->detail = $detail;

        return $this;
    }

    /**
     * @return string
     */
    public function getInstance(): string
    {
        return $this->instance;
    }

    /**
     * @param string $instance
     *
     * @return Problem
     */
    public function setInstance(string $instance): Problem
    {
        $this->instance = $instance;

        return $this;
    }
}